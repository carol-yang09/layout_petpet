// media-generate

@mixin media-generate($breakpointsKey, $breakpointVal) {
  @if $breakpointVal == 0 {
    @content;
  } @else {
    @media (min-width: $breakpointVal) {
      @content;
    }
  }
}

@mixin mobile-s {
  @media (min-width: $breakpoint-xs) {
    @content;
  }
}

@mixin mobile {
  @media (min-width: $breakpoint-sm) {
    @content;
  }
}

@mixin pad {
  @media (min-width: $breakpoint-md) {
    @content;
  }
}

@mixin desktop-s {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

@mixin desktop-m {
  @media (min-width: $breakpoint-xl) {
    @content;
  }
}

// space-generate

@mixin space-generate($pro, $side, $spaceVal) {
  @if $side == '' {
    @if $pro == 'm' {
      margin: $spaceVal;
    }
    @if $pro == '-m' {
      margin: -$spaceVal;
    }
    @if $pro == 'p' {
      padding: $spaceVal;
    }
  }
  @if $side == 't' {
    @if $pro == 'm' {
      margin-top: $spaceVal;
    }
    @if $pro == 'p' {
      padding-top: $spaceVal;
    }
  }
  @if $side == 'b' {
    @if $pro == 'm' {
      margin-bottom: $spaceVal;
    }
    @if $pro == 'p' {
      padding-bottom: $spaceVal;
    }
  }
  @if $side == 'r' {
    @if $pro == 'm' {
      margin-right: $spaceVal;
    }
    @if $pro == 'p' {
      padding-right: $spaceVal;
    }
  }
  @if $side == 'l' {
    @if $pro == 'm' {
      margin-left: $spaceVal;
    }
    @if $pro == 'p' {
      padding-left: $spaceVal;
    }
  }
  @if $side == 'x' {
    @if $pro == 'm' {
      margin-left: $spaceVal;
      margin-right: $spaceVal;
    }
    @if $pro == 'p' {
      padding-left: $spaceVal;
      padding-right: $spaceVal;
    }
  }
  @if $side == 'y' {
    @if $pro == 'm' {
      margin-top: $spaceVal;
      margin-bottom: $spaceVal;
    }
    @if $pro == 'p' {
      padding-top: $spaceVal;
      padding-bottom: $spaceVal;
    }
  }
}

// box-sizing

@mixin box-sizing($boxSizing) {
  -webkit-box-sizing: $boxSizing;
  -moz-box-sizing: $boxSizing;
  box-sizing: $boxSizing;
}

// img-replace-text

@mixin img-replace-text() {
  white-space: nowrap;
  text-indent: 101%;
  overflow: hidden;
}

// bg-full

@mixin bg-full($bgSize) {
  background-position: center center;
  background-repeat: no-repeat;
  background-size: $bgSize;
}

// transition

@mixin transition($time) {
  transition: all $time ease-in-out;
}